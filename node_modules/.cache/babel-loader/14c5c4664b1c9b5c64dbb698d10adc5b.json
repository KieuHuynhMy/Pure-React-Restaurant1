{"ast":null,"code":"var _jsxFileName = \"/Users/KayHuynh/Documents/React/confusion/src/components/Menu.js\";\nimport React, { Component } from \"react\";\nimport { DISHES } from \"../shared/Dishes\";\nimport { Card, CardImg, CardBody, CardTitle, CardText, CardImgOverlay } from \"reactstrap\";\nimport moment from 'moment';\nexport default class Menu extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSelectedDish = dish => {\n      this.setState({\n        selectedDish: dish\n      });\n    };\n\n    this.renderSelectedDish = dish => {\n      if (dish !== null) {\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"col-md-5 m-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, React.createElement(Card, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, React.createElement(CardImg, {\n          src: dish.image,\n          alt: dish.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }), React.createElement(CardBody, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, React.createElement(CardTitle, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, dish.name), React.createElement(CardText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, dish.description)))), React.createElement(\"div\", {\n          className: \"col-md-5 m-1\",\n          style: {\n            paddingLine: 3\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, \"Comment\"), React.createElement(\"ul\", {\n          className: \"list-unstyled\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, dish.comments.map(item => {\n          return React.createElement(React.Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44\n            },\n            __self: this\n          }, React.createElement(\"li\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45\n            },\n            __self: this\n          }, item.comment), React.createElement(\"li\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46\n            },\n            __self: this\n          }, \"--\" + item.author + \" , \" + moment(item.date).format()));\n        }))));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.state = {\n      dish: DISHES,\n      selectedDish: null\n    };\n  }\n\n  render() {\n    const menu = this.state.dish.map(item => {\n      return React.createElement(\"div\", {\n        key: item.id,\n        className: \"col-md-5 m-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Card, {\n        onClick: () => this.onSelectedDish(item),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(CardImg, {\n        src: item.image,\n        alt: item.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(CardImgOverlay, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, item.name))));\n    });\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, menu), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, this.renderSelectedDish(this.state.selectedDish)));\n  }\n\n}","map":{"version":3,"sources":["/Users/KayHuynh/Documents/React/confusion/src/components/Menu.js"],"names":["React","Component","DISHES","Card","CardImg","CardBody","CardTitle","CardText","CardImgOverlay","moment","Menu","constructor","props","onSelectedDish","dish","setState","selectedDish","renderSelectedDish","image","name","description","paddingLine","comments","map","item","comment","author","date","format","state","render","menu","id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { DISHES } from \"../shared/Dishes\";\nimport {\n  Card,\n  CardImg,\n  CardBody,\n  CardTitle,\n  CardText,\n  CardImgOverlay\n} from \"reactstrap\";\nimport moment from 'moment';\n\nexport default class Menu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dish: DISHES,\n      selectedDish: null\n    };\n  }\n  onSelectedDish = dish => {\n    this.setState({\n      selectedDish: dish\n    });\n  };\n  renderSelectedDish = dish => {\n    if (dish !== null) {\n      return (\n        <React.Fragment>\n          <div className=\"col-md-5 m-1\">\n            <Card>\n              <CardImg src={dish.image} alt={dish.name} />\n              <CardBody>\n                <CardTitle>{dish.name}</CardTitle>\n                <CardText>{dish.description}</CardText>\n              </CardBody>\n            </Card>\n          </div>\n          <div className=\"col-md-5 m-1\" style={{ paddingLine: 3 }}>\n            <h3>Comment</h3>\n            <ul className=\"list-unstyled\">\n              {dish.comments.map(item => {\n                return (\n                  <React.Fragment>\n                    <li>{item.comment}</li>\n                    <li>\n                      {\"--\" +\n                        item.author +\n                        \" , \" +\n                        moment(item.date , ).format()}\n                    </li>\n                  </React.Fragment>\n                );\n              })}\n            </ul>\n          </div>\n        </React.Fragment>\n      );\n    } else {\n      return <div />;\n    }\n  };\n  render() {\n    const menu = this.state.dish.map(item => {\n      return (\n        <div key={item.id} className=\"col-md-5 m-1\">\n          <Card onClick={() => this.onSelectedDish(item)}>\n            <CardImg src={item.image} alt={item.name} />\n            <CardImgOverlay>\n              <CardTitle>{item.name}</CardTitle>\n            </CardImgOverlay>\n          </Card>\n        </div>\n      );\n    });\n    return (\n      <div className=\"container\">\n        <div className=\"row\">{menu}</div>\n        <div className=\"row\">\n          {this.renderSelectedDish(this.state.selectedDish)}\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}