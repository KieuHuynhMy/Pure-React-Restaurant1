{"ast":null,"code":"var _jsxFileName = \"/Users/KayHuynh/Documents/React/confusion/src/components/Menu.js\";\nimport React, { Component } from \"react\";\nimport { Card, CardImg, CardBody, CardTitle, CardText, CardImgOverlay } from \"reactstrap\";\nimport moment from \"moment\";\nimport DishDetail from \"./DishDetail\";\nexport default class Menu extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSelectedDish = dish => {\n      this.setState({\n        selectedDish: dish\n      });\n    };\n\n    this.renderSelectedDish = dish => {\n      if (dish !== null) {\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"col-md-5 m-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, React.createElement(Card, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, React.createElement(CardImg, {\n          src: dish.image,\n          alt: dish.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }), React.createElement(CardBody, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, React.createElement(CardTitle, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, dish.name), React.createElement(CardText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, dish.description)))), React.createElement(\"div\", {\n          className: \"col-md-5 m-1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, \"Comment\"), React.createElement(\"ul\", {\n          className: \"list-unstyled\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, dish.comments.map(item => {\n          return React.createElement(React.Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44\n            },\n            __self: this\n          }, React.createElement(\"li\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46\n            },\n            __self: this\n          }, item.comment)), React.createElement(\"li\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48\n            },\n            __self: this\n          }, React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            },\n            __self: this\n          }, \"--\" + item.author + \" , \" + moment(item.date).format(\"MMM DD, YYYY\"))));\n        }))));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.state = {\n      selectedDish: null\n    };\n  }\n\n  render() {\n    const menu = this.props.dishes.map(item => {\n      return React.createElement(\"div\", {\n        key: item.id,\n        className: \"col-md-5 m-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Card, {\n        onClick: () => this.onSelectedDish(item),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(CardImg, {\n        src: item.image,\n        alt: item.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(CardImgOverlay, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, item.name))));\n    });\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, menu), React.createElement(DishDetail, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/KayHuynh/Documents/React/confusion/src/components/Menu.js"],"names":["React","Component","Card","CardImg","CardBody","CardTitle","CardText","CardImgOverlay","moment","DishDetail","Menu","constructor","props","onSelectedDish","dish","setState","selectedDish","renderSelectedDish","image","name","description","comments","map","item","comment","author","date","format","state","render","menu","dishes","id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport {\n  Card,\n  CardImg,\n  CardBody,\n  CardTitle,\n  CardText,\n  CardImgOverlay\n} from \"reactstrap\";\nimport moment from \"moment\";\nimport DishDetail from \"./DishDetail\";\n\nexport default class Menu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedDish: null\n    };\n  }\n  onSelectedDish = dish => {\n    this.setState({\n      selectedDish: dish\n    });\n  };\n  renderSelectedDish = dish => {\n    if (dish !== null) {\n      return (\n        <React.Fragment>\n          <div className=\"col-md-5 m-1\">\n            <Card>\n              <CardImg src={dish.image} alt={dish.name} />\n              <CardBody>\n                <CardTitle>{dish.name}</CardTitle>\n                <CardText>{dish.description}</CardText>\n              </CardBody>\n            </Card>\n          </div>\n          <div className=\"col-md-5 m-1\">\n            <h3>Comment</h3>\n            <ul className=\"list-unstyled\">\n              {dish.comments.map(item => {\n                return (\n                  <React.Fragment>\n                    <li>\n                      <p>{item.comment}</p>\n                    </li>\n                    <li>\n                      <p>\n                        {\"--\" +\n                          item.author +\n                          \" , \" +\n                          moment(item.date).format(\"MMM DD, YYYY\")}\n                      </p>\n                    </li>\n                  </React.Fragment>\n                );\n              })}\n            </ul>\n          </div>\n        </React.Fragment>\n      );\n    } else {\n      return <div />;\n    }\n  };\n  render() {\n    const menu = this.props.dishes.map(item => {\n      return (\n        <div key={item.id} className=\"col-md-5 m-1\">\n          <Card onClick={() => this.onSelectedDish(item)}>\n            <CardImg src={item.image} alt={item.name} />\n            <CardImgOverlay>\n              <CardTitle>{item.name}</CardTitle>\n            </CardImgOverlay>\n          </Card>\n        </div>\n      );\n    });\n    return (\n      <div className=\"container\">\n        <div className=\"row\">{menu}</div>\n\n        {/* {this.renderSelectedDish(this.state.selectedDish)} */}\n        <DishDetail />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}