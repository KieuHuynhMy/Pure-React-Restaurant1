{"ast":null,"code":"var _jsxFileName = \"/Users/KayHuynh/Documents/React/confusion/src/components/DishDetail.js\";\nimport React, { Component } from \"react\";\nimport { Card, CardImg, CardBody, CardTitle, CardText } from \"reactstrap\";\nexport default class DishDetail extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderDish = dish => {\n      if (dish !== null) {\n        return React.createElement(Card, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 8\n          },\n          __self: this\n        }, React.createElement(CardImg, {\n          src: dish.image,\n          alt: dish.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 9\n          },\n          __self: this\n        }), React.createElement(CardBody, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 10\n          },\n          __self: this\n        }, React.createElement(CardTitle, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 11\n          },\n          __self: this\n        }, dish.name), React.createElement(CardText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12\n          },\n          __self: this\n        }, dish.description)));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.renderComments = comments => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"list-unstyled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"Comment\"), comments.comments.map(comment => {\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, comment.comment)), React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, \"--\" + comment.author + \" , \" + moment(comment.date).format(\"MMM DD, YYYY\"))));\n      })));\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-5 m-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-md-5 m-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/KayHuynh/Documents/React/confusion/src/components/DishDetail.js"],"names":["React","Component","Card","CardImg","CardBody","CardTitle","CardText","DishDetail","renderDish","dish","image","name","description","renderComments","comments","map","comment","author","moment","date","format","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,QAAxB,EAAkCC,SAAlC,EAA6CC,QAA7C,QAA6D,YAA7D;AAEA,eAAe,MAAMC,UAAN,SAAyBN,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SAChDO,UADgD,GACnCC,IAAI,IAAI;AACjB,UAAGA,IAAI,KAAK,IAAZ,EAAiB;AACf,eACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,OAAD;AAAS,UAAA,GAAG,EAAEA,IAAI,CAACC,KAAnB;AAA0B,UAAA,GAAG,EAAED,IAAI,CAACE,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAYF,IAAI,CAACE,IAAjB,CADF,EAEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAWF,IAAI,CAACG,WAAhB,CAFF,CAFF,CADJ;AASD,OAVD,MAUO;AACH,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;AAEJ,KAhB+C;;AAAA,SAkBhDC,cAlBgD,GAkB/BC,QAAQ,IAAI;AAC3B,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACF;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEGA,QAAQ,CAACA,QAAT,CAAkBC,GAAlB,CAAsBC,OAAO,IAAI;AAChC,eACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIA,OAAO,CAACA,OAAZ,CADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,OACCA,OAAO,CAACC,MADT,GAEC,KAFD,GAGCC,MAAM,CAACF,OAAO,CAACG,IAAT,CAAN,CAAqBC,MAArB,CAA4B,cAA5B,CAJJ,CADF,CAJF,CADF;AAeD,OAhBA,CAFH,CADE,CADJ;AAwBD,KA3C+C;AAAA;;AA4ChDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AAnD+C","sourcesContent":["import React, { Component } from \"react\";\nimport { Card, CardImg, CardBody, CardTitle, CardText } from \"reactstrap\";\n\nexport default class DishDetail extends Component {\n  renderDish = dish => {\n      if(dish !== null){\n        return (\n            <Card>\n              <CardImg src={dish.image} alt={dish.name} />\n              <CardBody>\n                <CardTitle>{dish.name}</CardTitle>\n                <CardText>{dish.description}</CardText>\n              </CardBody>\n            </Card>\n          );\n      } else {\n          return <div/>\n      }\n   \n  };\n\n  renderComments = comments => {\n    return (\n        <div>\n      <ul className=\"list-unstyled\">\n        <h4>Comment</h4>\n        {comments.comments.map(comment => {\n          return (\n            <React.Fragment>\n              <li>\n                <p>{comment.comment}</p>\n              </li>\n              <li>\n                <p>\n                  {\"--\" +\n                    comment.author +\n                    \" , \" +\n                    moment(comment.date).format(\"MMM DD, YYYY\")}\n                </p>\n              </li>\n            </React.Fragment>\n          );\n        })}\n      </ul>\n      </div>\n    );\n  };\n  render() {\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-5 m-1\" />\n        <div className=\"col-md-5 m-1\" />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}